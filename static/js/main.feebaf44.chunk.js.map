{"version":3,"sources":["components/Home.js","components/Movies.js","components/Upcoming.js","components/Popular.js","components/Detail.js","components/Watchlist.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getUpcomingMovies","getPopularMovies","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","data","setState","movies","results","catch","error","console","stop","_callee2","_context2","concat","toConsumableArray","state","randownImage","random","Math","floor","length","url","poster_path","react_default","createElement","className","style","backgroundImage","React","Component","Movies","upcoming","popular","cardClick","_ref","id","localStorage","setItem","history","push","_x","apply","arguments","_this2","href","map","movie","key","onClick","bind","src","alt","title","release_date","Upcoming","displayGridView","displayListView","view","aria-hidden","changeView","display","Table","responsive","overview","Detail","getMovieDetails","getItem","getGenres","genres","genre","name","getVideo","addToWatchList","movieId","wishList","JSON","parse","filter","alert","stringify","movieUrl","items","videoId","play","setModalShow","modalShow","backdrop_path","runtime","vote_average","Modal","size","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","width","height","frameBorder","allowFullScreen","controls","Watchlist","getMoviesIdFromLocalstorage","forEach","getMovie","_ref2","_x2","removeFromWatchlist","i","splice","App","checked","t0","sent","t1","darkMode","handleChange","root","document","documentElement","setProperty","assertThisInitialized","Navbar","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","defaultActiveKey","Link","react_switch_default","onChange","onColor","offColor","uncheckedIcon","checkedIcon","react_router_dom","react_router","exact","path","component","Popular","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.feebaf44.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/home.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            url: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUpcomingMovies()\r\n        this.getPopularMovies()\r\n    }\r\n\r\n    getUpcomingMovies = async () => {\r\n        await fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=60ca685595fabda716e462959af807ca&language=en-US&region=US')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ movies: data.results })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    getPopularMovies = async () => {\r\n        await fetch('https://api.themoviedb.org/3/movie/popular?api_key=60ca685595fabda716e462959af807ca&language=en-US&page=1')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let movies = [...this.state.movies, ...data.results]\r\n                this.setState({ movies })\r\n            })\r\n            .catch(error => console.error(error))\r\n\r\n        this.randownImage()\r\n    }\r\n\r\n    randownImage = () => {\r\n        const random = Math.floor(Math.random() * this.state.movies.length);\r\n        this.setState({url: this.state.movies[random].poster_path})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapperH\">\r\n                <div className=\"left\">\r\n                    <h6 className=\"about\">About</h6>\r\n                    <h1 className=\"tmt\">THE MOVIE TRAILER</h1>\r\n                    <p className=\"description\">The Movie Trailer (TMT) is a website which allows you to be always up to date about <br />\r\n                        latest movies. The website also allows you to watch movie trailers and add these <br />\r\n                        movies to your watchlist. Have fun messing arround in the app. </p>\r\n                    <h5 className=\"author\">AUTHOR: SAMUEL MONTEIRO</h5>\r\n                </div>\r\n                <div className=\"right\" style={{ \"backgroundImage\": `url(http://image.tmdb.org/t/p/original${this.state.url})` }}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles/movies.css';\r\n\r\nexport default class Movies extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            upcoming: [],\r\n            popular: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUpcomingMovies()\r\n        this.getPopularMovies()\r\n    }\r\n\r\n    getUpcomingMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=60ca685595fabda716e462959af807ca&language=en-US&region=US')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ upcoming: data.results })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    getPopularMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key=60ca685595fabda716e462959af807ca&language=en-US&page=1')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ popular: data.results })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    cardClick = async (id) => {\r\n        await localStorage.setItem('movieId', id)\r\n        this.props.history.push(\"/details\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"headerTitle\">Upcoming</h1>\r\n                    <a href=\"/upcoming\">See all</a>\r\n                </div>\r\n                <div className=\"upcoming\">\r\n                    {this.state.upcoming.map((movie, key) => {\r\n                        if (key >= 5)\r\n                            return\r\n\r\n                        return (\r\n                            <div className=\"cardM\" key={key} onClick={this.cardClick.bind(this, movie.id)} >\r\n                                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n                                <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                <p className=\"releaseDate\">{movie.release_date}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"header\">\r\n                    <h1 className=\"headerTitle\">Most popular</h1>\r\n                    <a href=\"/popular\">See all</a>\r\n                </div>\r\n                <div className=\"popular\">\r\n                    {this.state.popular.map((movie, key) => {\r\n                        if (key >= 5)\r\n                            return\r\n\r\n                        return (\r\n                            <div className=\"cardM\" key={key} onClick={this.cardClick.bind(this, movie.id)}>\r\n                                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n                                <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                <p className=\"releaseDate\">{movie.release_date}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles/upcoming.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default class Upcoming extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            upcoming: [],\r\n            displayGridView: \"grid\",\r\n            displayListView: \"none\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getUpcomingMovies()\r\n\r\n    getUpcomingMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=60ca685595fabda716e462959af807ca&language=en-US&region=US')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ upcoming: data.results })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    changeView(view) {\r\n        if (view === \"grid\") \r\n            this.setState({displayGridView: \"grid\", displayListView: \"none\"})\r\n         else \r\n            this.setState({displayGridView: \"none\", displayListView: \"inline\"})\r\n    }\r\n\r\n    cardClick = async (id) => {\r\n        await localStorage.setItem('movieId', id)\r\n        this.props.history.push(\"/details\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"headerTitle\">Upcoming movies</h1>\r\n                    <div className=\"display\">\r\n                        <i className=\"fa fa-th-large\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"grid\")}></i>\r\n                        <i className=\"fa fa-list\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"list\")}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"gridView\" style={{display: this.state.displayGridView}}>\r\n                    {this.state.upcoming.map((movie, key) => {\r\n                        return (\r\n                            <div className=\"cardM\" key={key} onClick={this.cardClick.bind(this, movie.id)}>\r\n                                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n                                <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                <p className=\"releaseDate\">{movie.release_date}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"listView\" style={{display: this.state.displayListView}}>\r\n                    <Table responsive >\r\n                        <tbody>\r\n                            {this.state.upcoming.map((movie, key) => {\r\n                                return (\r\n                                    <tr key={key} onClick={this.cardClick.bind(this, movie.id)}>\r\n                                        <td><img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} /></td>\r\n                                        <td>\r\n                                            <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                            <p className=\"releaseDate\">{movie.release_date}</p>\r\n                                            <h3>Overview</h3>\r\n                                            <p className=\"descpition\">{movie.overview}</p>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles/movies.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default class Upcoming extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            popular: [],\r\n            displayGridView: \"grid\",\r\n            displayListView: \"none\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getPopularMovies()\r\n\r\n    getPopularMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key=60ca685595fabda716e462959af807ca&language=en-US&page=1')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ popular: data.results })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    changeView(view) {\r\n        if (view === \"grid\") \r\n            this.setState({displayGridView: \"grid\", displayListView: \"none\"})\r\n         else \r\n            this.setState({displayGridView: \"none\", displayListView: \"inline\"})\r\n    }\r\n\r\n    cardClick = async (id) => {\r\n        await localStorage.setItem('movieId', id)\r\n        this.props.history.push(\"/details\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"headerTitle\">Most popular movies</h1>\r\n                    <div className=\"display\">\r\n                        <i className=\"fa fa-th-large\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"grid\")}></i>\r\n                        <i className=\"fa fa-list\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"list\")}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"gridView\" style={{display: this.state.displayGridView}}>\r\n                    {this.state.popular.map((movie, key) => {\r\n                        return (\r\n                            <div className=\"cardM\" key={key} onClick={this.cardClick.bind(this, movie.id)}>\r\n                                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n                                <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                <p className=\"releaseDate\">{movie.release_date}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"listView\" style={{display: this.state.displayListView}}>\r\n                    <Table responsive >\r\n                        <tbody>\r\n                            {this.state.popular.map((movie, key) => {\r\n                                return (\r\n                                    <tr key={key} onClick={this.cardClick.bind(this, movie.id)}>\r\n                                        <td><img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} /></td>\r\n                                        <td>\r\n                                            <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                            <p className=\"releaseDate\">{movie.release_date}</p>\r\n                                            <h3>Overview</h3>\r\n                                            <p className=\"descpition\">{movie.overview}</p>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles/detail.css';\r\nimport \"../../node_modules/video-react/dist/video-react.css\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nexport default class Detail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: {},\r\n            genres: \"\",\r\n            modalShow: false,\r\n            setModalShow: false,\r\n            movieUrl: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => this.getMovieDetails()\r\n\r\n    getMovieDetails = async () => {\r\n        const id = localStorage.getItem('movieId')\r\n        await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=60ca685595fabda716e462959af807ca&language=en-US`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ movie: data })\r\n                this.getGenres()\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    getGenres = () => {\r\n        let genres = \"\"\r\n        this.state.movie.genres.map((genre, key) => {\r\n            genres += genre.name + \" \"\r\n        })\r\n        this.setState({ genres })\r\n        this.getVideo()\r\n    }\r\n\r\n    addToWatchList = () => {\r\n        const movieId = localStorage.getItem('movieId')\r\n        let wishList = []\r\n        if (JSON.parse(localStorage.getItem('wishList')) !== null)\r\n            wishList = JSON.parse(localStorage.getItem('wishList'))\r\n\r\n        if (wishList.filter(movie => movie.movieId === movieId).length)\r\n            return alert(`${this.state.movie.title} already added to your washlist`)\r\n\r\n        wishList.push({ movieId })\r\n        localStorage.setItem('wishList', JSON.stringify(wishList))\r\n        alert(`${this.state.movie.title} added to your watchlist`)\r\n    }\r\n\r\n    getVideo = () => {\r\n        fetch(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyBSfE-DU5aUzC-N4dErR3w3Kg6l6L0M-fk&channelId=UCi8e0iOVk1fEOogdfu4YgfA&q=${this.state.movie.title + \" Trailer\"}&part=snippet,id&order=date&maxResults=2`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ movieUrl: `https://www.youtube.com/embed/${data.items[0].id.videoId}` })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    play = () => this.setState({ setModalShow: true, modalShow: true })\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\" style={{ \"backgroundImage\": `url(http://image.tmdb.org/t/p/original${this.state.movie.backdrop_path})` }}>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"containerD\">\r\n                    <div className=\"horizontal\">\r\n                        <img src={`http://image.tmdb.org/t/p/w500${this.state.movie.poster_path}`} alt={this.state.movie.title} />\r\n                        <div className=\"info\">\r\n                            <h6 className=\"releaseDate\">{this.state.movie.release_date}</h6>\r\n                            <h1 className=\"movieTitle\">{this.state.movie.title}</h1>\r\n                            <h5 className=\"genres\">{this.state.genres}</h5>\r\n                            <i className=\"fa fa-clock-o\" aria-hidden=\"true\"> {this.state.movie.runtime + \" mn\"} </i> <br />\r\n                            <a className=\"avarageVote\"><i className=\"fa fa-imdb imdbIcon\" aria-hidden=\"true\"></i> {this.state.movie.vote_average}</a> <br />\r\n                            <div className=\"horizontalB\">\r\n                                <button className=\"button add\" onClick={this.addToWatchList.bind(this)}> add to watch list</button>\r\n                                <button className=\"button play\" onClick={this.play.bind(this)}> whatch trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h3 className=\"overview\">Overview</h3>\r\n                    <p className=\"description\">{this.state.movie.overview}</p>\r\n                </div>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    show={this.state.modalShow}\r\n                    onHide={() => this.setState({ setModalShow: false, modalShow: false })}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {this.state.movie.title}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <iframe width=\"100%\" height=\"405\" src={this.state.movieUrl} frameBorder=\"0\" allowFullScreen={true} controls=\"1\"></iframe>\r\n                    </Modal.Body>\r\n                </Modal >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../styles/watchlist.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default class Watchlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            displayGridView: \"grid\",\r\n            displayListView: \"none\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getMoviesIdFromLocalstorage()\r\n\r\n    getMoviesIdFromLocalstorage = () => {\r\n        const movies = JSON.parse(localStorage.getItem('wishList'))\r\n        if (movies === null)\r\n            return\r\n\r\n        movies.forEach(movie => {\r\n            this.getMovie(movie.movieId)\r\n        });\r\n\r\n    }\r\n\r\n    getMovie = async (id) => {\r\n        await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=60ca685595fabda716e462959af807ca&language=en-US`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const movies = [...this.state.movies]\r\n                movies.push(data)\r\n                this.setState({ movies })\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    changeView(view) {\r\n        if (view === \"grid\")\r\n            this.setState({ displayGridView: \"grid\", displayListView: \"none\" })\r\n        else\r\n            this.setState({ displayGridView: \"none\", displayListView: \"inline\" })\r\n    }\r\n\r\n    cardClick = async (id) => {\r\n        await localStorage.setItem('movieId', id)\r\n        this.props.history.push(\"/details\")\r\n    }\r\n\r\n    removeFromWatchlist = (id) => {\r\n        const movies = JSON.parse(localStorage.getItem('wishList'))\r\n        for (let i = 0; i < movies.length; i++) {\r\n            if (movies[i].movieId == id)\r\n                movies.splice(i, 1)\r\n        }\r\n\r\n        localStorage.setItem('wishList', JSON.stringify(movies))\r\n        this.setState({ movies: [] })\r\n        this.getMoviesIdFromLocalstorage()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"headerTitle\">Watchlist</h1>\r\n                    <div className=\"display\">\r\n                        <i className=\"fa fa-th-large\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"grid\")}></i>\r\n                        <i className=\"fa fa-list\" aria-hidden=\"true\" onClick={this.changeView.bind(this, \"list\")}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"gridView\" style={{ display: this.state.displayGridView }}>\r\n                    {this.state.movies.map((movie, key) => {\r\n                        return (\r\n                            <div className=\"cardW\" key={key}>\r\n                                <img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} onClick={this.cardClick.bind(this, movie.id)} />\r\n                                <h2 className=\"movieTitle\" onClick={this.cardClick.bind(this, movie.id)}>{movie.title}</h2>\r\n                                <div className=\"deleteDiv\">\r\n                                    <p className=\"releaseDate\">{movie.release_date}</p>\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={this.removeFromWatchlist.bind(this, movie.id)}></i>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"listView\" style={{ display: this.state.displayListView }}>\r\n                    <Table responsive >\r\n                        <tbody>\r\n                            {this.state.movies.map((movie, key) => {\r\n                                return (\r\n                                    <tr key={key}>\r\n                                        <td onClick={this.cardClick.bind(this, movie.id)} ><img src={`http://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} /></td>\r\n                                        <td>\r\n                                            <h2 className=\"movieTitle\">{movie.title}</h2>\r\n                                            <p className=\"releaseDate\">{movie.release_date}</p>\r\n                                            <h3>Overview</h3>\r\n                                            <p className=\"descpition\">{movie.overview}</p>\r\n                                            <i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={this.removeFromWatchlist.bind(this, movie.id)}></i>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Movies from './components/Movies'\nimport Upcoming from './components/Upcoming'\nimport Popular from './components/Popular' \nimport Detail from './components/Detail'\nimport Watchlist from './components/Watchlist'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Switch from \"react-switch\";\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    if (!localStorage.getItem('darkMode'))\n      localStorage.setItem('darkMode', \"false\");\n\n    const checked = await localStorage.getItem('darkMode') == \"true\" ? true : false\n    this.setState({ checked })\n    this.darkMode()\n  }\n\n  handleChange = async (checked) => {\n    await this.setState({ checked });\n    localStorage.setItem('darkMode', checked);\n    this.darkMode()\n  }\n\n  darkMode = () => {\n    let root = document.documentElement\n    if (this.state.checked) {\n      root.style.setProperty('--backgroundColor', \"#201B17\");\n      root.style.setProperty('--darkGray', \"#E7E7E7\");\n      root.style.setProperty('--black', \"#fff\");\n      root.style.setProperty('--lightGray', \"#A2A2A2\");\n    } else {\n      root.style.setProperty('--backgroundColor', \"#FDFCFA\");\n      root.style.setProperty('--darkGray', \"#413E3E\");\n      root.style.setProperty('--black', \"#000\");\n      root.style.setProperty('--lightGray', \"#A2A2A2\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar sticky=\"top\" bg=\"white\" expand=\"lg\" className=\"nav\">\n          <div className=\"container\">\n            <Navbar.Brand href=\"/\"><h1 className=\"logo\">TMT</h1></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto ml-auto\" defaultActiveKey=\"/movies\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"movies\">Movies</Nav.Link>\n                <Nav.Link href=\"watchlist\">Watchlist</Nav.Link>\n              </Nav>\n              <i className=\"fa fa-sun-o\" aria-hidden=\"true\"></i>\n              <Switch\n                onChange={this.handleChange}\n                checked={this.state.checked}\n                id=\"normal-switch\"\n                onColor=\"#FFB961\"\n                offColor=\"#EAEAEA\"\n                uncheckedIcon={false}\n                checkedIcon={false}\n                height={23}\n                width={45}\n              />\n              <i className=\"fa fa-moon-o\" aria-hidden=\"true\"></i>\n            </Navbar.Collapse>\n\n          </div>\n        </Navbar>\n        <div className=\"containerM\">\n          <Router>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/movies\" component={Movies} />\n            <Route path=\"/upcoming\" component={Upcoming} />\n            <Route path=\"/popular\" component={Popular} />\n            <Route path=\"/details\" component={Detail} />\n            <Route path=\"/watchlist\" component={Watchlist} />\n          </Router> \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}